html{
  scrollbar-width: thin;
  scroll-behavior: smooth;
  scrollbar-color: rgba(255,255,255,0.25) transparent;
}

::-webkit-scrollbar {
  background: transparent;
  width: 8px;
}
::-webkit-scrollbar-thumb {
  background-color: rgba(255,255,255,0.25);
  border-radius: 2px;
}

*{
  color: white;
  font-family: bahnschrift;
}

body{
  --backdrop: none;
  --backdrop-opacity: 1;
  --background-color: 29,31,33;
  background-color: rgb(var(--background-color));
  padding: 0;
  margin: 0;
  min-height: 100vh;
  /* font-size: calc(sqrt(pow(1vw,2) + pow(1vh,2)) * 1em); */
  font-size: 2vmin;
}
body::before{
  content: '';
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  opacity: var(--backdrop-opacity);
  background-image: var(--backdrop);
  background-size: cover;
  background-repeat: no-repeat;
  filter: blur(8px) brightness(.85);
  animation: back-and-forth 60s alternate cubic-bezier(0.37, 0, 0.63, 1) infinite;
  transition: filter 250ms, background-image 250ms, opacity 250ms;
}

@keyframes back-and-forth {
  from{
    background-position-x: left;
  }
  to{
    background-position-x: right;
  }
}


*{
  position: relative;
  box-sizing: border-box;
  min-width: 0; min-height: 0;
}

ul{
  list-style: none;
  padding: 0;
  margin: 0;
}
input, button{
  all: unset;
  display: flex;
  width: fit-content;
  height: fit-content;
}
:is(button, .button){
  background-color: rgba(0,0,0,0.25);
  padding: 0.5em;
  gap: 1em;
  border-radius: 0.5em;
  display: flex;
  align-items: center;
  backdrop-filter: blur(4px) brightness(0.8);
  box-sizing: border-box;
  cursor: pointer;

  transition: filter 250ms;

  &:hover{
    backdrop-filter: blur(8px);
    filter: brightness(1.25);
  }

  & > *:not(input) {
    pointer-events: none;
  }

}
input[type="radio"]:not(:focus-visible){
  outline: none;
}
input:is([type="radio"],[type="checkbox"]){
  margin: 0;
  height: 100%;
  width: 100%;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1;
}

.flex{
  display: flex;
}
.flex div:has(*){
  display: flex;
  width: fit-content;
}


* {
  background-size: cover;
  background-position: center;
}





nav{
  transition: filter 100ms;
}
nav:hover{
  filter: brightness(1.25);
}




.wrapper{
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 10vh;
  padding: 2rem;
  z-index: 1;
}



.platform-selector{
  box-sizing: content-box;

  height: var(--height);
  width: fit-content;
  --gap: calc(var(--height) / 6);
  gap: var(--gap);
  --pos: 0px;

  /* border: 2px solid rgb(48,48,48); */
  /* padding: 0 var(--gap); */
  border-radius: 8px;

  overflow: hidden;
}
.platform-selector::after{
  --size: 2px;
  content: '';
  position: absolute;
  /* bottom: calc(-1/2 * var(--gap)); */
  /* bottom: calc(-1 * var(--size)); */
  bottom: 0;
  left: var(--pos);
  width: var(--height);
  height: var(--size);
  background-color: white;

  transition: left 250ms;
}

.platform-selector > div{
  height: 100%;
  aspect-ratio: 1/1;
  backdrop-filter: blur(8px);
  background-color: rgba(0,0,0,0.25);

  transition: filter 100ms, background-color 250ms;
}
.platform-selector div:is(:hover,:focus-within){
  backdrop-filter: blur(8px) brightness(1.2);
}

.platform-selector > div > :is(icon, .icon){
  padding: 10%;
  background-origin: content-box;
}

:is(icon, .icon){
  aspect-ratio: 1/1;
  background-position: center;
  background-size: contain;
  background-repeat: no-repeat;
  background-origin: content-box;
  height: 100%;
  display: block;
  /* height: 22px; */
  /* gonna need a way to scale raster images properly soon enough, this is either awful looking or unresponsive */
}

/* .platform-selector > div:has(input:checked)::after{
  content: '';
  position: absolute;
  bottom: calc(-1/2 * var(--gap));
  width: 100%;
  height: 2px;
  background-color: white;
} */


hero {
  height: 100%;
  display: block;
}



.top-nav{
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 80%;

  --height: 6vmin;
  height: var(--height);


  & > *:not(platform) {
    display: flex;
    align-items: center;
    height: 80%;


    & > * {
      height: 100%;
    }

  }


}













.gimmeaname{
  width: 80%;
  display: flex;
  flex-direction: column;
  gap: 1em;


  & > * {
    width: 100%;
  }


}

#games{
  max-width: 100%;
  width: fit-content;
  height: 10vw;
  /* aspect-ratio: 2/1; */
  /* margin-bottom: 10%; */
  border-radius: 1em;
  /* border: 2px white solid;* */
  overflow: hidden;
}

#games > div{
  display: flex;
  gap: 1em;
  height: 100%;
}

#games > div > div{
  aspect-ratio: 1/1;
  background-color: rgb(48,48,48, 0.25);
  backdrop-filter: blur(4px) brightness(0.8);
  overflow: hidden;
  display: flex;
  align-items: center;
  gap: 4%;
  height: 100%;

  transition: backdrop-filter 250ms, aspect-ratio 250ms;


  &:is(:hover,:focus-visible,:focus-within,:has(input:checked)) {
    backdrop-filter: blur(8px) brightness(1.25);
  }

}

/* #preview > .info{
  display: flex;
  flex-direction: column;
  /* flex-grow: 1; */
  /* width: 100%; */
  /* overflow: hidden;
  justify-content: center;
  align-items: center;

  & > :is(icon, .icon){
    /* justify-self: start; */
    /* margin: 4% 0; */
    /* background-position-x: left; */
    /* width: fit-content; */
  /* } */

  /* & > #chips{
    display: flex;
    flex-direction: row;
    border-radius: 0.5em; */
    /* padding: 1em 2em; */
    /* overflow: hidden;
    gap: 2px;
    /* flex-basis: auto; */
    /* justify-content: center; */
    /* height: 2.5em; */
/*
    & > div{
      --height: calc(1cqw - 4%); */
      /* background-color: rgba(48,48,48,0.25); */
      /* backdrop-filter: blur(4px); */
      /* border-radius: 0; */
      /* padding: 6%;
      white-space: nowrap;
      flex: 1 1 auto;
      font-size: var(--height);
      height: var(--height);
      display: flex;
      align-items: center;
      justify-content: center;
      container-type: size;
    }

    width: 100%; */
  /* } */
/* } */

/* @container {
  #chips > div{
    font-size: 2cqh;
  }
} */


/* #preview > .info > :is(icon, .icon){
  /* justify-self: start; */
  /* aspect-ratio: unset; */
  /* height: 100%; */
  /* flex-grow: 1;
  width: 100%; */
/* } */


#preview:focus-visible, #preview > .content > button:focus-visible{
  outline: none;
  /* border: 2px solid white; */
  /* ^^^ resizes elements despite box sizing border box ^^^ */
}
:is(#games > div > div, #preview):has(:is(icon, .icon)){
  cursor: pointer;
}


/* :is(#games > div > div, #preview):is(:hover,:focus-visible,:focus-within,:has(input:checked)),#preview{
  backdrop-filter: blur(8px) brightness(1.25);
  filter: brightness(1.25);
} */

/* #preview:focus-within{
  padding: 4%;
} */

#games > div > div > :is(icon, .icon){
  transition: scale 250ms;
  padding: 16%;
  height: 100%;
  /* width: unset; */
}
#games > div > div:is(:hover,:focus-visible) > :is(icon, .icon){
  scale: .95;
}
/* #preview:focus-within > div{
  flex-basis: 100%;
  height: 100%;
}
#preview:focus-within > :is(icon, .icon){
  padding: 0;
} */


body:has(.wrapper > .gimmeaname > div:hover)::before{
  filter: blur(0px) brightness(1);
}




.platform-selector > div:has(input:checked){
  background-color: rgba(255,255,255,0.25);
}
/* .platform-selector > div:has(input:checked) > :is(icon, .icon){
  translate: 0 calc(-1 * var(--size));
} */



/* #preview:is(:focus-within,:focus-visible){
  aspect-ratio: unset;
  grid-row: 2;
  grid-column: 1/-1;
  height: 100%;
} */
/* #preview:is(:focus-within,:focus-visible) ~ div{
  visibility: hidden;
} */

/* #preview > .content{
  display: flex;
  justify-content: center;
  flex-direction: column;
  /* flex-grow: 1; */
  /* margin: 10%; */
  /* gap: calc(0.1 * 75vw / 6); */
  /* overflow: hidden; */
  /* z-index: 1; */
  /* width: 100%; */
/* } */

/* #preview > .content > button{
  all: unset;
  display: flex;
  flex-direction: row;
  background-color: rgba(48,48,48,0.5);
  border-radius: 0.5em;
  backdrop-filter: blur(8px);
  transition: background-color 150ms;
  flex-grow: 0;
  min-width: min-content;

  /* &:hover > :is(icon, .icon){
    --stroke: 1px;
    filter: drop-shadow(var(--stroke) 0 0 white)
        drop-shadow(0 var(--stroke) 0 white)
        drop-shadow(calc(-1 * var(--stroke)) 0 0 white)
        drop-shadow(0 calc(-1 * var(--stroke)) 0 white);
  } */
  /* &:is(:hover, :focus-visible){
    background-color: rgba(var(--color), 0.25);
  } */

/* } */
/* #preview > .content > button:is(:hover,:focus-visible){
  background-color: rgba(64,64,64,0.25);
} */

/* #preview > .content > button > *{
  padding: 6%;
  box-sizing: content-box;
}

#preview > .content > button > :is(icon, .icon){
  height: 2em;
}

#preview > .content > button > span{
  /* flex-grow: 1; */
  /* display: flex;
  align-items: center;
  font-size: 1.1em; */
/* } */




tabbable#game {

  border-radius: 1em;
  overflow: hidden;

  display: flex;
  flex-direction: column;

  height: 25em;

  transition: height 250ms;


  & > *:not(.tabs) {
    flex-grow: 1;
    /* width: 100%; */
    backdrop-filter: blur(8px) brightness(1.25);
    background-color: rgba(48,48,48,0.25);
  }

  &[data-game=""]{
    height: 0;
  }



  & > .tabs {

    /* bottom: -0.5em; */


    & > * {
      padding: 0.5em 2ch;
      background-color: rgba(48,48,48,0.25);
      backdrop-filter: blur(8px) brightness(1);

      &:has(:checked) {
        backdrop-filter: blur(8px) brightness(1.25);
      }

    }

    overflow: hidden;

  }


  & > #preview {

    & > .series {
      position: absolute;
      height: 12%;
      aspect-ratio: 1/1;
      margin: 1.5%;
      left: 0;
      top: 0;
      /* align-self: end;
      margin-left: auto; */

      filter: grayscale(1.0);
      /* grayscale(100%) contrast(0) brightness(100) */

      transition: filter 250ms, background-image 250ms;

      &:hover {
        filter: grayscale(0);
      }


    }

    & .description {
      overflow-y: scroll;
      scroll-snap-type: y mandatory;
      height: 10ch;
      /* display: flex;
      flex-direction: column; */
      padding: 1em;
      /* gap: 1em; */


      & > * {
        scroll-snap-align: center;
        text-align: justify;
        margin: 2ch 0;
        /* all: unset;
        display: block; */
      }


    }


  }


}



#preview{
  display: flex;
  /* height: 20em; */
  /* background-color: rgba(48,48,48,0.25); */
  /* backdrop-filter: blur(4px) brightness(0.8); */
  border-radius: inherit;

  transition: filter 250ms, aspect-ratio 250ms, height 250ms;


  & > *{
    display: flex;
    flex-direction: column;
    align-items: center;
    /* flex-grow: 1; */
  }
  & > .spacer{
    flex-grow: 1;
  }

  & > .info{
    aspect-ratio: unset;
    min-width: 50%;
    padding: 1em;


    & > *{
      width: 100%;
    }

    & > :is(icon, .icon){
      flex-grow: 1;
      aspect-ratio: unset;
      height: 100%;
      margin: 0;
      padding: 0.75em;

      transition: background-image 250ms;
    }

    & > .chips{
      display: flex;
      gap: 0.5ch;
      border-radius: 1ch;
      overflow: hidden;
      width: fit-content;
      align-items: center;

      & > *{
        /* background-color: rgba(0,0,0,0.25); */
        backdrop-filter: blur(4px);
        padding: 1ch 1em;
        text-wrap: nowrap;
        white-space: nowrap;
      }

    }

  }

  & > .tabs{
    display: flex;
    flex-direction: column;
    margin-left: auto;
    border-radius: 1em;
    /* background-color: rgba(0,0,0,0.25); */
    overflow: hidden;
    backdrop-filter: blur(4px);

    & > div{
      /* border-radius: 0; */
      background-color: transparent;
      flex-grow: 1;
      display: flex;
      flex-direction: column;
      justify-content: center;
      padding: 1em;
      border-radius: 1em;

      &:has(input:checked){
        background-color: rgba(0,0,0,0.1);

        & > :is(icon, .icon){
          filter: drop-shadow(0 0 2px rgb(220,220,220));
          scale: 1.05;
        }
      }

      & > :is(icon, .icon){
        width: 1em;
        transition: scale 150ms, filter 150ms;
      }

    }

  }

}









.WIP::after {
  content: 'WIP';
  /* background-color: white; */
  backdrop-filter: blur(4px) brightness(1.25);
  position: absolute;
  --pad: 4ch;
  top: calc(var(--pad) - 1.2em);
  right: -1.5em;
  rotate: 45deg;
  padding: 0.1em var(--pad);
}










catalogue {
  gap: 1em;
  transition: height 250ms, display 0ms ease 250ms;

  & > div {
    /* max-height: calc(7/4 * 256px); */
    aspect-ratio: 4/7;
    /* max-height: 1fr; */

    /* overflow: hidden; */

    perspective: 30em;

    cursor: pointer;


    & > hero {
      /* background-size: 100%; */

      border-radius: 0.25em;
      backdrop-filter: blur(4px) brightness(0.8);

      transform-origin: bottom;

      transition: scale 450ms, transform 450ms;
    }


    &:hover {
      & > hero {
        scale: 1.1;
        transform: rotateX(10deg);
      }
    }


  }

}
